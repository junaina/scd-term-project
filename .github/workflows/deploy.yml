name: Build and Deploy to Minikube

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Docker using Minikube's env
        shell: powershell
        run: |
          Write-Host "‚öô Configuring Docker to use Minikube..."
          & minikube -p minikube docker-env | Invoke-Expression

      - name: Load .env.local manually (self-hosted only)
        shell: powershell
        run: |
          $envPath = "D:/UNI/sixth/SCD/Term Project/MERN_Notes_App/.env.local"
          if (Test-Path $envPath) {
            Write-Host "üìÑ Loading environment variables from .env.local..."
            Get-Content $envPath | ForEach-Object {
              $pair = $_.Split('=')
              if ($pair.Length -eq 2) {
                [System.Environment]::SetEnvironmentVariable($pair[0], $pair[1], 'Process')
              }
            }
          } else {
            Write-Error "‚ùå .env.local not found at $envPath"
            exit 1
          }

      - name: ‚úÖ Debug loaded environment variables
        shell: powershell
        run: |
          if ($env:DOCKER_USERNAME -and $env:DOCKER_PASSWORD) {
            echo "‚úÖ DOCKER_USERNAME = $env:DOCKER_USERNAME"
            echo "‚úÖ DOCKER_PASSWORD is set (length = $($env:DOCKER_PASSWORD.Length))"
          } else {
            echo "‚ùå One or more environment variables are missing"
            exit 1
          }

      - name: Build backend image
        shell: powershell
        run: |
          docker build -t "$env:DOCKER_USERNAME/backend-app:latest" ./app/server

      - name: Build frontend image
        shell: powershell
        run: |
          docker build -t "$env:DOCKER_USERNAME/frontend-app:latest" ./app/frontend

      - name: Login to Docker Hub (non-stdin workaround)
        shell: powershell
        run: |
          docker login -u "$env:DOCKER_USERNAME" -p "$env:DOCKER_PASSWORD"

      - name: Push backend image
        shell: powershell
        run: |
          docker push "$env:DOCKER_USERNAME/backend-app:latest"

      - name: Push frontend image
        shell: powershell
        run: |
          docker push "$env:DOCKER_USERNAME/frontend-app:latest"

      - name: Deploy to Minikube
        shell: powershell
        run: |
          kubectl apply -f mongo-deployment.yaml
          kubectl apply -f mongo-service.yaml
          kubectl apply -f backend-deployment.yaml
          kubectl apply -f backend-service.yaml
          kubectl apply -f frontend-deployment.yaml
          kubectl apply -f frontend-service.yaml
