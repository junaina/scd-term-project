name: Build and Deploy to Minikube

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Docker using Minikube's env
        shell: powershell
        run: |
          Write-Host "Configuring Docker to use Minikube..."
          & minikube -p minikube docker-env | Invoke-Expression

      - name: Copy .env.local into working directory
        shell: powershell
        run: |
          Copy-Item "$env:GITHUB_WORKSPACE\..\..\..\.env.local" "$env:GITHUB_WORKSPACE\.env.local" -Force

      - name: Load .env file manually (self-hosted only)
        shell: powershell
        run: |
          Get-Content .env.local | ForEach-Object {
            $pair = $_.Split('=')
            [System.Environment]::SetEnvironmentVariable($pair[0], $pair[1])
          }

      - name: Build backend image
        shell: powershell
        run: |
          docker build -t $env:DOCKER_USERNAME/backend-app:latest ./app/server

      - name: Build frontend image
        shell: powershell
        run: |
          docker build -t $env:DOCKER_USERNAME/frontend-app:latest ./app/frontend

      - name: Debug Docker username
        shell: powershell
        run: |
          echo "Docker username is $env:DOCKER_USERNAME"

      - name: Login to Docker Hub
        shell: powershell
        run: |
          echo "$env:DOCKER_PASSWORD" | docker login -u "$env:DOCKER_USERNAME" --password-stdin

      - name: Push backend image
        shell: powershell
        run: |
          docker push $env:DOCKER_USERNAME/backend-app:latest

      - name: Push frontend image
        shell: powershell
        run: |
          docker push $env:DOCKER_USERNAME/frontend-app:latest

      - name: Deploy to Minikube
        shell: powershell
        run: |
          kubectl apply -f mongo-deployment.yaml
          kubectl apply -f mongo-service.yaml
          kubectl apply -f backend-deployment.yaml
          kubectl apply -f backend-service.yaml
          kubectl apply -f frontend-deployment.yaml
          kubectl apply -f frontend-service.yaml
